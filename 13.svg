<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 600">
  <defs>
    <style>
      .cls-1 {
        letter-spacing: .14em;
      }

      .cls-2 {
        fill: #10111f;
      }

      .cls-2, .cls-3 {
        font-family: TrebuchetMS, 'Trebuchet MS';
        font-size: 10px;
      }

      .cls-3 {
        fill: #231f20;
      }

      .cls-4 {
        fill: #e8c92f;
        stroke-width: 0px;
      }

      .cls-5 {
        letter-spacing: .14em;
      }
    </style>
  </defs>
  <polygon class="cls-4" points="398.5 601.06 0 602.06 0 0 398.5 -1 398.5 601.06"/>
  <text class="cls-3" transform="translate(189.5 594.43)"><tspan x="0" y="0">Copyright:</tspan><tspan class="cls-5" x="46.71" y="0"> </tspan><tspan x="51.13" y="0">Â©</tspan><tspan class="cls-5" x="58.26" y="0"> </tspan><tspan x="62.69" y="0">2024</tspan><tspan class="cls-5" x="83.66" y="0"> </tspan><tspan x="88.09" y="0">APT.</tspan><tspan class="cls-1" x="109.04" y="0"> </tspan><tspan x="113.47" y="0">All</tspan><tspan class="cls-5" x="125.26" y="0"> </tspan><tspan x="129.69" y="0">rights</tspan><tspan class="cls-5" x="154.92" y="0"> </tspan><tspan x="159.35" y="0">reserved</tspan></text>
  <text class="cls-2" transform="translate(11.5 28.42)"><tspan x="0" y="0">Goal:</tspan><tspan x="0" y="15">The Spherical Wonderland function aims to create an interactive 3D </tspan><tspan x="0" y="30">animation using Babylon.js. It features a spherical container with letter </tspan><tspan x="0" y="45">planets, each showing a character from the user&apos;s name, enhanced by a glow </tspan><tspan x="0" y="60">effect.</tspan><tspan x="0" y="90">TecHNOLOGY USED:</tspan><tspan x="0" y="120">REAL-Time Rendering</tspan><tspan x="0" y="135">Dynamic Texture Mapping</tspan><tspan x="0" y="150">Spherical Coordinate System</tspan><tspan x="0" y="165">Shader Programming</tspan><tspan x="0" y="180">Alpha Blending</tspan><tspan x="0" y="195">JavaScript</tspan><tspan x="0" y="225">Roadblocks ENCOUNTERED:</tspan><tspan x="0" y="255">SPHERICAL DIStribution of Letter Planets: Ensuring even positioning and </tspan><tspan x="0" y="270">spacing within the spherical container.</tspan><tspan x="0" y="285">Efficient Letter Planet Creation: Dynamically creating many letter planets </tspan><tspan x="0" y="300">while maintaining performance.</tspan><tspan x="0" y="315">Glow Effect Customization: Fine-tuning parameters and material properties </tspan><tspan x="0" y="330">for a customized glow effect.</tspan><tspan x="0" y="360">How We Solved It:</tspan><tspan x="0" y="375">SPHERICAL DISTRIBUTion: Used a spherical coordinate system and random </tspan><tspan x="0" y="390">algorithms for balanced positioning.</tspan><tspan x="0" y="405">Efficient Creation: Developed a reusable function for generating letter </tspan><tspan x="0" y="420">planets, utilized Babylon.js&apos;s DynamicTexture class, and implemented object </tspan><tspan x="0" y="435">pooling techniques.</tspan><tspan x="0" y="450">Glow Effect Customization: Leveraged Babylon.js&apos;s GlowLayer, adjusting </tspan><tspan x="0" y="465">glow intensity and parameters, and customized material properties.</tspan><tspan x="0" y="480">Outcome:</tspan><tspan x="0" y="495">The Spherical Wonderland function delivers a mesmerizing 3D animation </tspan><tspan x="0" y="510">with evenly distributed letter planets and an engaging glow effect. </tspan><tspan x="0" y="525">Optimized creation techniques ensure smooth performance, enhancing the </tspan><tspan x="0" y="540">visual appeal.</tspan></text>
</svg>